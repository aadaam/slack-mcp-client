name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize]
    # Optional: Only run on specific file changes
    # paths:
    #   - "src/**/*.ts"
    #   - "src/**/*.tsx"
    #   - "src/**/*.js"
    #   - "src/**/*.jsx"

jobs:
  claude-review:
    # Optional: Filter by PR author
    # if: |
    #   github.event.pull_request.user.login == 'external-contributor' ||
    #   github.event.pull_request.user.login == 'new-developer' ||
    #   github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR'
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          # Use GitHub token instead of direct API
          auth_method: "github"
          
          # Optional: Specify model (defaults to Claude Sonnet 4)
          # model: "claude-opus-4-20250514"
          
          # Direct prompt for automated Go code review
          direct_prompt: |
            Please review this Go pull request for the Slack MCP Client project and provide feedback on:
            - Go best practices and idiomatic code
            - Error handling patterns (use of domain-specific errors)
            - Concurrency safety and proper context usage
            - MCP client integration patterns
            - Slack message formatting and API usage
            - Test coverage and quality
            - Security considerations (no secrets in code)
            - Logging consistency (structured logging patterns)
            
            Focus on the multi-transport MCP architecture and LLM provider integration patterns.
            Be constructive and reference specific Go conventions.
          
          # Add Go-specific tools for review
          allowed_tools: "Bash(make build),Bash(make test),Bash(make lint),Bash(make check),Bash(go test -v ./...),Bash(golangci-lint run),Bash(go vet ./...)"
          
          # Optional: Skip review for certain conditions
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')

